"use client";
// import styles from "./page.module.css";
import { useEffect, useState } from "react";
import { HiMenuAlt2 } from "react-icons/hi";
import { HiMenuAlt3 } from "react-icons/hi";
import { HiOutlineHome } from "react-icons/hi";
import { SiAboutdotme } from "react-icons/si";
import { MdOutlineCases } from "react-icons/md";
import { GrContactInfo } from "react-icons/gr";
import { IconContext } from "react-icons";
import { BsMeta } from "react-icons/bs";
import { FaLinkedinIn } from "react-icons/fa";
import { FaAngellist } from "react-icons/fa";
import { FaGithub } from "react-icons/fa";
import { BsTwitter } from "react-icons/bs";
import { BsInstagram } from "react-icons/bs";
import Link from "next/link";
import Image from "next/image";
import logo from "../../public/logo_images/logo.png";
import "./globals.css";
import { Inter } from "next/font/google";

const inter = Inter({ subsets: ["latin"] });

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({ children }) {
  const [animation, setAnimation] = useState(true);
  const [clicked, setClicked] = useState(false);

  useEffect(() => {
    setTimeout(() => {
      if (animation) {
        setAnimation(false);
      }
    }, 2000);
  }, [animation]);

  const iconItems = [
    {
      id: 0,
      pos: "header",
      link: "/",
      icon: <HiOutlineHome />,
    },
    {
      id: 1,
      pos: "header",
      link: "/about",
      icon: <SiAboutdotme />,
    },
    {
      id: 2,
      pos: "header",
      link: "/portfolio",
      icon: <MdOutlineCases />,
    },
    {
      id: 3,
      pos: "header",
      link: "/contact",
      icon: <GrContactInfo />,
    },
    {
      id: 4,
      pos: "footer",
      link: "https://www.linkedin.com/in/daronkwiafe/",
      icon: <FaLinkedinIn />,
    },
    {
      id: 5,
      pos: "footer",
      link: "https://github.com/Daron976",
      icon: <FaGithub />,
    },
    {
      id: 6,
      pos: "footer",
      link: "https://angel.co/u/daronkwiafe",
      icon: <FaAngellist />,
    },
    {
      id: 7,
      pos: "footer",
      link: "https://www.facebook.com/daron.wiafe",
      icon: <BsMeta />,
    },
    {
      id: 8,
      pos: "footer",
      link: "https://twitter.com/WiafeDaron",
      icon: <BsTwitter />,
    },
    {
      id: 9,
      pos: "footer",
      link: "https://www.instagram.com/sagineer976/",
      icon: <BsInstagram />,
    },
  ];

  return (
    <html lang="en">
      <body className={inter.className}>
        <header>
          <nav className="desktop-header">
            <div>
              <Image src={logo} width={88} height={80} alt="logo" />
            </div>
            <div className="flex menu-container transition">
              {/* <div
                className="menu-btn-container trigger-in"
                onClick={() => {
                  if (!clicked) {
                    setClicked(true);
                  } else setClicked(false);
                }}
              >
                <IconContext.Provider
                  value={{
                    size: "2.5em",
                    className: "menu-open-btn transition",
                  }}
                >
                  {clicked ? <HiMenuAlt2 /> : <HiMenuAlt3 />}
                </IconContext.Provider>
              </div> */}
              <ul className="desktop-menu flex transition slide-in">
                {iconItems
                  .filter((item) => item.pos !== "footer")
                  .map((item) => (
                    <li key={item.id}>
                      <Link href={item.link}>
                        <IconContext.Provider
                          value={{ size: "1.6rem", className: "nav-icon" }}
                        >
                          {item.icon}
                        </IconContext.Provider>
                      </Link>
                    </li>
                  ))}
              </ul>
            </div>
          </nav>
        </header>
        {children}
        <footer>
          <div className="social-links">
            <ul className="flex">
              {iconItems
                .filter((item) => item.pos !== "header")
                .map((item) => (
                  <li key={item.id}>
                    <Link href={item.link}>
                      <IconContext.Provider
                        value={{ size: "2rem", className: "social-icon" }}
                      >
                        {item.icon}
                      </IconContext.Provider>
                    </Link>
                  </li>
                ))}
            </ul>
            <div className="footer-text">
              <p>
                daronkwiafe@gmail.com
                <br />
                +27 65 747 8746
                <br />
                Sandton, South Africa
              </p>
              <p>Â©2023 Daron Wiafe. All rights reserved.</p>
            </div>
          </div>
        </footer>
      </body>
    </html>
  );
}
